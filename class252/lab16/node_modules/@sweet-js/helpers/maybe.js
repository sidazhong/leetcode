'lang sweet.js';

export class Maybe {
  // $FlowFixMe: computed properties still not supported in flow
  static ['fantasy-land/of'](v) {
    return Maybe.of(v);
  }

  static of(v) {
    return new Just(v);
  }

  // $FlowFixMe: computed properties still not supported in flow
  static ['fantasy-land/empty']() {
    return Maybe.empty();
  }

  static empty() {
    return new Nothing();
  }

  // $FlowFixMe: computed properties still not supported in flow
  static ['fantasy-land/zero']() {
    return Maybe.zero();
  }

  static zero() {
    return new Nothing();
  }

  static isJust(v) {
    return v instanceof Just;
  }

  static isNothing(v) {
    return v instanceof Nothing;
  }

  // $FlowFixMe: computed properties still not supported in flow
  ['fantasy-land/map'](f) {
    return this.map(f);
  }

  map(f) {
    throw new Error();
  }

  // $FlowFixMe: computed properties still not supported in flow
  ['fantasy-land/ap'](other) {
    return this.ap(other);
  }

  ap(other) {
    throw new Error();
  }

  // $FlowFixMe: computed properties still not supported in flow
  ['fantasy-land/chain'](f) {
    return this.chain(f);
  }

  chain(f) {
    throw new Error();
  }
}

export class Nothing extends Maybe {
  map(f) {
    return Maybe.empty();
  }

  ap(other) {
    return Maybe.empty();
  }

  chain(f) {
    return Maybe.empty();
  }
}

export class Just extends Maybe {

  constructor(v) {
    super();
    this.value = v;
  }

  map(f) {
    return new Just(f(this.value));
  }

  ap(other) {
    if (other instanceof Just) {
      return Maybe.of(other.value(this.value));
    }
    return Maybe.empty();
  }

  chain(f) {
    return f(this.value);
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tYXliZS5qcyJdLCJuYW1lcyI6WyJNYXliZSIsInYiLCJvZiIsIkp1c3QiLCJlbXB0eSIsIk5vdGhpbmciLCJ6ZXJvIiwiaXNKdXN0IiwiaXNOb3RoaW5nIiwiZiIsIm1hcCIsIkVycm9yIiwib3RoZXIiLCJhcCIsImNoYWluIiwiY29uc3RydWN0b3IiLCJ2YWx1ZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBR0EsT0FBTyxNQUFNQSxLQUFOLENBQWU7QUFDcEI7QUFDQSxVQUFRLGlCQUFSLEVBQTJCQyxDQUEzQixFQUEyQztBQUN6QyxXQUFPRCxNQUFNRSxFQUFOLENBQVNELENBQVQsQ0FBUDtBQUNEOztBQUVELFNBQU9DLEVBQVAsQ0FBVUQsQ0FBVixFQUEwQjtBQUN4QixXQUFPLElBQUlFLElBQUosQ0FBU0YsQ0FBVCxDQUFQO0FBQ0Q7O0FBRUQ7QUFDQSxVQUFRLG9CQUFSLElBQTBDO0FBQ3hDLFdBQU9ELE1BQU1JLEtBQU4sRUFBUDtBQUNEOztBQUVELFNBQU9BLEtBQVAsR0FBeUI7QUFDdkIsV0FBTyxJQUFJQyxPQUFKLEVBQVA7QUFDRDs7QUFFRDtBQUNBLFVBQVEsbUJBQVIsSUFBeUM7QUFDdkMsV0FBT0wsTUFBTU0sSUFBTixFQUFQO0FBQ0Q7O0FBRUQsU0FBT0EsSUFBUCxHQUF3QjtBQUN0QixXQUFPLElBQUlELE9BQUosRUFBUDtBQUNEOztBQUVELFNBQU9FLE1BQVAsQ0FBY04sQ0FBZCxFQUFvQztBQUNsQyxXQUFPQSxhQUFhRSxJQUFwQjtBQUNEOztBQUVELFNBQU9LLFNBQVAsQ0FBaUJQLENBQWpCLEVBQXVDO0FBQ3JDLFdBQU9BLGFBQWFJLE9BQXBCO0FBQ0Q7O0FBRUQ7QUFDQSxHQUFDLGtCQUFELEVBQXdCSSxDQUF4QixFQUE2QztBQUMzQyxXQUFPLEtBQUtDLEdBQUwsQ0FBU0QsQ0FBVCxDQUFQO0FBQ0Q7O0FBRURDLE1BQU9ELENBQVAsRUFBNEI7QUFDMUIsVUFBTSxJQUFJRSxLQUFKLEVBQU47QUFDRDs7QUFFRDtBQUNBLEdBQUMsaUJBQUQsRUFBdUJDLEtBQXZCLEVBQXlEO0FBQ3ZELFdBQU8sS0FBS0MsRUFBTCxDQUFRRCxLQUFSLENBQVA7QUFDRDs7QUFFREMsS0FBTUQsS0FBTixFQUF3QztBQUN0QyxVQUFNLElBQUlELEtBQUosRUFBTjtBQUNEOztBQUVEO0FBQ0EsR0FBQyxvQkFBRCxFQUEwQkYsQ0FBMUIsRUFBc0Q7QUFDcEQsV0FBTyxLQUFLSyxLQUFMLENBQVdMLENBQVgsQ0FBUDtBQUNEOztBQUVESyxRQUFTTCxDQUFULEVBQXFDO0FBQ25DLFVBQU0sSUFBSUUsS0FBSixFQUFOO0FBQ0Q7QUE3RG1COztBQWdFdEIsT0FBTyxNQUFNTixPQUFOLFNBQXlCTCxLQUF6QixDQUFrQztBQUN2Q1UsTUFBT0QsQ0FBUCxFQUE0QjtBQUMxQixXQUFPVCxNQUFNSSxLQUFOLEVBQVA7QUFDRDs7QUFFRFMsS0FBTUQsS0FBTixFQUF3QztBQUN0QyxXQUFPWixNQUFNSSxLQUFOLEVBQVA7QUFDRDs7QUFFRFUsUUFBU0wsQ0FBVCxFQUFxQztBQUNuQyxXQUFPVCxNQUFNSSxLQUFOLEVBQVA7QUFDRDtBQVhzQzs7QUFjekMsT0FBTyxNQUFNRCxJQUFOLFNBQXNCSCxLQUF0QixDQUErQjs7QUFHcENlLGNBQVlkLENBQVosRUFBa0I7QUFDaEI7QUFDQSxTQUFLZSxLQUFMLEdBQWFmLENBQWI7QUFDRDs7QUFFRFMsTUFBT0QsQ0FBUCxFQUE0QjtBQUMxQixXQUFPLElBQUlOLElBQUosQ0FBU00sRUFBRSxLQUFLTyxLQUFQLENBQVQsQ0FBUDtBQUNEOztBQUVESCxLQUFNRCxLQUFOLEVBQXdDO0FBQ3RDLFFBQUlBLGlCQUFpQlQsSUFBckIsRUFBMkI7QUFDekIsYUFBT0gsTUFBTUUsRUFBTixDQUFTVSxNQUFNSSxLQUFOLENBQVksS0FBS0EsS0FBakIsQ0FBVCxDQUFQO0FBQ0Q7QUFDRCxXQUFPaEIsTUFBTUksS0FBTixFQUFQO0FBQ0Q7O0FBRURVLFFBQVNMLENBQVQsRUFBcUM7QUFDbkMsV0FBT0EsRUFBRSxLQUFLTyxLQUFQLENBQVA7QUFDRDtBQXJCbUMiLCJmaWxlIjoibWF5YmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyInbGFuZyBzd2VldC5qcyc7XG4vLyBAZmxvd1xuXG5leHBvcnQgY2xhc3MgTWF5YmU8VD4ge1xuICAvLyAkRmxvd0ZpeE1lOiBjb21wdXRlZCBwcm9wZXJ0aWVzIHN0aWxsIG5vdCBzdXBwb3J0ZWQgaW4gZmxvd1xuICBzdGF0aWMgWydmYW50YXN5LWxhbmQvb2YnXSh2OiBUKTogTWF5YmU8VD4ge1xuICAgIHJldHVybiBNYXliZS5vZih2KTtcbiAgfVxuXG4gIHN0YXRpYyBvZih2OiBUKTogTWF5YmU8VD4ge1xuICAgIHJldHVybiBuZXcgSnVzdCh2KTtcbiAgfVxuXG4gIC8vICRGbG93Rml4TWU6IGNvbXB1dGVkIHByb3BlcnRpZXMgc3RpbGwgbm90IHN1cHBvcnRlZCBpbiBmbG93XG4gIHN0YXRpYyBbJ2ZhbnRhc3ktbGFuZC9lbXB0eSddKCk6IE1heWJlPFQ+IHtcbiAgICByZXR1cm4gTWF5YmUuZW1wdHkoKTtcbiAgfVxuXG4gIHN0YXRpYyBlbXB0eSgpOiBNYXliZTxUPiB7XG4gICAgcmV0dXJuIG5ldyBOb3RoaW5nKCk7XG4gIH1cblxuICAvLyAkRmxvd0ZpeE1lOiBjb21wdXRlZCBwcm9wZXJ0aWVzIHN0aWxsIG5vdCBzdXBwb3J0ZWQgaW4gZmxvd1xuICBzdGF0aWMgWydmYW50YXN5LWxhbmQvemVybyddKCk6IE1heWJlPFQ+IHtcbiAgICByZXR1cm4gTWF5YmUuemVybygpO1xuICB9XG5cbiAgc3RhdGljIHplcm8oKTogTWF5YmU8VD4ge1xuICAgIHJldHVybiBuZXcgTm90aGluZygpO1xuICB9XG5cbiAgc3RhdGljIGlzSnVzdCh2OiBNYXliZTwqPik6IGJvb2xlYW4ge1xuICAgIHJldHVybiB2IGluc3RhbmNlb2YgSnVzdDtcbiAgfVxuXG4gIHN0YXRpYyBpc05vdGhpbmcodjogTWF5YmU8Kj4pOiBib29sZWFuIHtcbiAgICByZXR1cm4gdiBpbnN0YW5jZW9mIE5vdGhpbmc7XG4gIH1cblxuICAvLyAkRmxvd0ZpeE1lOiBjb21wdXRlZCBwcm9wZXJ0aWVzIHN0aWxsIG5vdCBzdXBwb3J0ZWQgaW4gZmxvd1xuICBbJ2ZhbnRhc3ktbGFuZC9tYXAnXTxWPihmOiBUID0+IFYpOiBNYXliZTxWPiB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGYpO1xuICB9XG5cbiAgbWFwPFY+KGY6IFQgPT4gVik6IE1heWJlPFY+IHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoKTtcbiAgfVxuXG4gIC8vICRGbG93Rml4TWU6IGNvbXB1dGVkIHByb3BlcnRpZXMgc3RpbGwgbm90IHN1cHBvcnRlZCBpbiBmbG93XG4gIFsnZmFudGFzeS1sYW5kL2FwJ108Vj4ob3RoZXI6IE1heWJlPChUKSA9PiBWPik6IE1heWJlPFY+IHtcbiAgICByZXR1cm4gdGhpcy5hcChvdGhlcik7XG4gIH1cblxuICBhcDxWPihvdGhlcjogTWF5YmU8KFQpID0+IFY+KTogTWF5YmU8Vj4ge1xuICAgIHRocm93IG5ldyBFcnJvcigpO1xuICB9XG5cbiAgLy8gJEZsb3dGaXhNZTogY29tcHV0ZWQgcHJvcGVydGllcyBzdGlsbCBub3Qgc3VwcG9ydGVkIGluIGZsb3dcbiAgWydmYW50YXN5LWxhbmQvY2hhaW4nXTxWPihmOiBUID0+IE1heWJlPFY+KTogTWF5YmU8Vj4ge1xuICAgIHJldHVybiB0aGlzLmNoYWluKGYpO1xuICB9XG5cbiAgY2hhaW48Vj4oZjogVCA9PiBNYXliZTxWPik6IE1heWJlPFY+IHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgTm90aGluZzxUPiBleHRlbmRzIE1heWJlPFQ+IHtcbiAgbWFwPFY+KGY6IFQgPT4gVik6IE1heWJlPFY+IHtcbiAgICByZXR1cm4gTWF5YmUuZW1wdHkoKTtcbiAgfVxuXG4gIGFwPFY+KG90aGVyOiBNYXliZTwoVCkgPT4gVj4pOiBNYXliZTxWPiB7XG4gICAgcmV0dXJuIE1heWJlLmVtcHR5KCk7XG4gIH1cblxuICBjaGFpbjxWPihmOiBUID0+IE1heWJlPFY+KTogTWF5YmU8Vj4ge1xuICAgIHJldHVybiBNYXliZS5lbXB0eSgpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBKdXN0PFQ+IGV4dGVuZHMgTWF5YmU8VD4ge1xuICB2YWx1ZTogVDtcblxuICBjb25zdHJ1Y3Rvcih2OiBUKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLnZhbHVlID0gdjtcbiAgfVxuXG4gIG1hcDxWPihmOiBUID0+IFYpOiBNYXliZTxWPiB7XG4gICAgcmV0dXJuIG5ldyBKdXN0KGYodGhpcy52YWx1ZSkpO1xuICB9XG5cbiAgYXA8Vj4ob3RoZXI6IE1heWJlPChUKSA9PiBWPik6IE1heWJlPFY+IHtcbiAgICBpZiAob3RoZXIgaW5zdGFuY2VvZiBKdXN0KSB7XG4gICAgICByZXR1cm4gTWF5YmUub2Yob3RoZXIudmFsdWUodGhpcy52YWx1ZSkpO1xuICAgIH1cbiAgICByZXR1cm4gTWF5YmUuZW1wdHkoKTtcbiAgfVxuXG4gIGNoYWluPFY+KGY6IFQgPT4gTWF5YmU8Vj4pOiBNYXliZTxWPiB7XG4gICAgcmV0dXJuIGYodGhpcy52YWx1ZSk7XG4gIH1cbn1cbiJdfQ==