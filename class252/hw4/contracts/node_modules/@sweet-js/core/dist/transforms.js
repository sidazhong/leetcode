'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CompiletimeTransform = exports.VarBindingTransform = exports.ModuleNamespaceTransform = exports.ReturnStatementTransform = exports.OperatorDeclTransform = exports.SyntaxDeclTransform = exports.SyntaxrecDeclTransform = exports.DebuggerTransform = exports.DefaultTransform = exports.ClassTransform = exports.ThisTransform = exports.YieldTransform = exports.SuperTransform = exports.ExportTransform = exports.ImportTransform = exports.WithTransform = exports.DoTransform = exports.ContinueTransform = exports.BreakTransform = exports.SwitchTransform = exports.ForTransform = exports.IfTransform = exports.WhileTransform = exports.TryTransform = exports.ConstDeclTransform = exports.LetDeclTransform = exports.ThrowTransform = exports.NewTransform = exports.VariableDeclTransform = exports.FunctionDeclTransform = undefined;

var _sweetModule = require('./sweet-module');

var _sweetModule2 = _interopRequireDefault(_sweetModule);

var _syntax = require('./syntax');

var _syntax2 = _interopRequireDefault(_syntax);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class FunctionDeclTransform {}
exports.FunctionDeclTransform = FunctionDeclTransform;
class VariableDeclTransform {}
exports.VariableDeclTransform = VariableDeclTransform;
class NewTransform {}
exports.NewTransform = NewTransform;
class ThrowTransform {}
exports.ThrowTransform = ThrowTransform;
class LetDeclTransform {}
exports.LetDeclTransform = LetDeclTransform;
class ConstDeclTransform {}
exports.ConstDeclTransform = ConstDeclTransform;
class TryTransform {}
exports.TryTransform = TryTransform;
class WhileTransform {}
exports.WhileTransform = WhileTransform;
class IfTransform {}
exports.IfTransform = IfTransform;
class ForTransform {}
exports.ForTransform = ForTransform;
class SwitchTransform {}
exports.SwitchTransform = SwitchTransform;
class BreakTransform {}
exports.BreakTransform = BreakTransform;
class ContinueTransform {}
exports.ContinueTransform = ContinueTransform;
class DoTransform {}
exports.DoTransform = DoTransform;
class WithTransform {}
exports.WithTransform = WithTransform;
class ImportTransform {}
exports.ImportTransform = ImportTransform;
class ExportTransform {}
exports.ExportTransform = ExportTransform;
class SuperTransform {}
exports.SuperTransform = SuperTransform;
class YieldTransform {}
exports.YieldTransform = YieldTransform;
class ThisTransform {}
exports.ThisTransform = ThisTransform;
class ClassTransform {}
exports.ClassTransform = ClassTransform;
class DefaultTransform {}
exports.DefaultTransform = DefaultTransform;
class DebuggerTransform {}
exports.DebuggerTransform = DebuggerTransform;
class SyntaxrecDeclTransform {}
exports.SyntaxrecDeclTransform = SyntaxrecDeclTransform;
class SyntaxDeclTransform {}
exports.SyntaxDeclTransform = SyntaxDeclTransform;
class OperatorDeclTransform {}
exports.OperatorDeclTransform = OperatorDeclTransform;
class ReturnStatementTransform {}
exports.ReturnStatementTransform = ReturnStatementTransform;
class ModuleNamespaceTransform {

  constructor(namespace, mod) {
    this.namespace = namespace;
    this.mod = mod;
  }
}
exports.ModuleNamespaceTransform = ModuleNamespaceTransform;
class VarBindingTransform {

  constructor(id) {
    this.id = id;
  }
}
exports.VarBindingTransform = VarBindingTransform;
class CompiletimeTransform {

  constructor(value) {
    this.value = value;
  }
}
exports.CompiletimeTransform = CompiletimeTransform;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy90cmFuc2Zvcm1zLmpzIl0sIm5hbWVzIjpbIkZ1bmN0aW9uRGVjbFRyYW5zZm9ybSIsIlZhcmlhYmxlRGVjbFRyYW5zZm9ybSIsIk5ld1RyYW5zZm9ybSIsIlRocm93VHJhbnNmb3JtIiwiTGV0RGVjbFRyYW5zZm9ybSIsIkNvbnN0RGVjbFRyYW5zZm9ybSIsIlRyeVRyYW5zZm9ybSIsIldoaWxlVHJhbnNmb3JtIiwiSWZUcmFuc2Zvcm0iLCJGb3JUcmFuc2Zvcm0iLCJTd2l0Y2hUcmFuc2Zvcm0iLCJCcmVha1RyYW5zZm9ybSIsIkNvbnRpbnVlVHJhbnNmb3JtIiwiRG9UcmFuc2Zvcm0iLCJXaXRoVHJhbnNmb3JtIiwiSW1wb3J0VHJhbnNmb3JtIiwiRXhwb3J0VHJhbnNmb3JtIiwiU3VwZXJUcmFuc2Zvcm0iLCJZaWVsZFRyYW5zZm9ybSIsIlRoaXNUcmFuc2Zvcm0iLCJDbGFzc1RyYW5zZm9ybSIsIkRlZmF1bHRUcmFuc2Zvcm0iLCJEZWJ1Z2dlclRyYW5zZm9ybSIsIlN5bnRheHJlY0RlY2xUcmFuc2Zvcm0iLCJTeW50YXhEZWNsVHJhbnNmb3JtIiwiT3BlcmF0b3JEZWNsVHJhbnNmb3JtIiwiUmV0dXJuU3RhdGVtZW50VHJhbnNmb3JtIiwiTW9kdWxlTmFtZXNwYWNlVHJhbnNmb3JtIiwiY29uc3RydWN0b3IiLCJuYW1lc3BhY2UiLCJtb2QiLCJWYXJCaW5kaW5nVHJhbnNmb3JtIiwiaWQiLCJDb21waWxldGltZVRyYW5zZm9ybSIsInZhbHVlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7Ozs7QUFDQTs7Ozs7O0FBRU8sTUFBTUEscUJBQU4sQ0FBNEI7UUFBdEJBLHFCLEdBQUFBLHFCO0FBQ04sTUFBTUMscUJBQU4sQ0FBNEI7UUFBdEJBLHFCLEdBQUFBLHFCO0FBQ04sTUFBTUMsWUFBTixDQUFtQjtRQUFiQSxZLEdBQUFBLFk7QUFDTixNQUFNQyxjQUFOLENBQXFCO1FBQWZBLGMsR0FBQUEsYztBQUNOLE1BQU1DLGdCQUFOLENBQXVCO1FBQWpCQSxnQixHQUFBQSxnQjtBQUNOLE1BQU1DLGtCQUFOLENBQXlCO1FBQW5CQSxrQixHQUFBQSxrQjtBQUNOLE1BQU1DLFlBQU4sQ0FBbUI7UUFBYkEsWSxHQUFBQSxZO0FBQ04sTUFBTUMsY0FBTixDQUFxQjtRQUFmQSxjLEdBQUFBLGM7QUFDTixNQUFNQyxXQUFOLENBQWtCO1FBQVpBLFcsR0FBQUEsVztBQUNOLE1BQU1DLFlBQU4sQ0FBbUI7UUFBYkEsWSxHQUFBQSxZO0FBQ04sTUFBTUMsZUFBTixDQUFzQjtRQUFoQkEsZSxHQUFBQSxlO0FBQ04sTUFBTUMsY0FBTixDQUFxQjtRQUFmQSxjLEdBQUFBLGM7QUFDTixNQUFNQyxpQkFBTixDQUF3QjtRQUFsQkEsaUIsR0FBQUEsaUI7QUFDTixNQUFNQyxXQUFOLENBQWtCO1FBQVpBLFcsR0FBQUEsVztBQUNOLE1BQU1DLGFBQU4sQ0FBb0I7UUFBZEEsYSxHQUFBQSxhO0FBQ04sTUFBTUMsZUFBTixDQUFzQjtRQUFoQkEsZSxHQUFBQSxlO0FBQ04sTUFBTUMsZUFBTixDQUFzQjtRQUFoQkEsZSxHQUFBQSxlO0FBQ04sTUFBTUMsY0FBTixDQUFxQjtRQUFmQSxjLEdBQUFBLGM7QUFDTixNQUFNQyxjQUFOLENBQXFCO1FBQWZBLGMsR0FBQUEsYztBQUNOLE1BQU1DLGFBQU4sQ0FBb0I7UUFBZEEsYSxHQUFBQSxhO0FBQ04sTUFBTUMsY0FBTixDQUFxQjtRQUFmQSxjLEdBQUFBLGM7QUFDTixNQUFNQyxnQkFBTixDQUF1QjtRQUFqQkEsZ0IsR0FBQUEsZ0I7QUFDTixNQUFNQyxpQkFBTixDQUF3QjtRQUFsQkEsaUIsR0FBQUEsaUI7QUFDTixNQUFNQyxzQkFBTixDQUE2QjtRQUF2QkEsc0IsR0FBQUEsc0I7QUFDTixNQUFNQyxtQkFBTixDQUEwQjtRQUFwQkEsbUIsR0FBQUEsbUI7QUFDTixNQUFNQyxxQkFBTixDQUE0QjtRQUF0QkEscUIsR0FBQUEscUI7QUFDTixNQUFNQyx3QkFBTixDQUErQjtRQUF6QkEsd0IsR0FBQUEsd0I7QUFDTixNQUFNQyx3QkFBTixDQUErQjs7QUFJcENDLGNBQVlDLFNBQVosRUFBK0JDLEdBQS9CLEVBQWlEO0FBQy9DLFNBQUtELFNBQUwsR0FBaUJBLFNBQWpCO0FBQ0EsU0FBS0MsR0FBTCxHQUFXQSxHQUFYO0FBQ0Q7QUFQbUM7UUFBekJILHdCLEdBQUFBLHdCO0FBU04sTUFBTUksbUJBQU4sQ0FBMEI7O0FBRy9CSCxjQUFZSSxFQUFaLEVBQXdCO0FBQ3RCLFNBQUtBLEVBQUwsR0FBVUEsRUFBVjtBQUNEO0FBTDhCO1FBQXBCRCxtQixHQUFBQSxtQjtBQU9OLE1BQU1FLG9CQUFOLENBQTJCOztBQUdoQ0wsY0FBWU0sS0FBWixFQUF3QjtBQUN0QixTQUFLQSxLQUFMLEdBQWFBLEtBQWI7QUFDRDtBQUwrQjtRQUFyQkQsb0IsR0FBQUEsb0IiLCJmaWxlIjoidHJhbnNmb3Jtcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBmbG93XG5pbXBvcnQgU3dlZXRNb2R1bGUgZnJvbSAnLi9zd2VldC1tb2R1bGUnO1xuaW1wb3J0IFN5bnRheCBmcm9tICcuL3N5bnRheCc7XG5cbmV4cG9ydCBjbGFzcyBGdW5jdGlvbkRlY2xUcmFuc2Zvcm0ge31cbmV4cG9ydCBjbGFzcyBWYXJpYWJsZURlY2xUcmFuc2Zvcm0ge31cbmV4cG9ydCBjbGFzcyBOZXdUcmFuc2Zvcm0ge31cbmV4cG9ydCBjbGFzcyBUaHJvd1RyYW5zZm9ybSB7fVxuZXhwb3J0IGNsYXNzIExldERlY2xUcmFuc2Zvcm0ge31cbmV4cG9ydCBjbGFzcyBDb25zdERlY2xUcmFuc2Zvcm0ge31cbmV4cG9ydCBjbGFzcyBUcnlUcmFuc2Zvcm0ge31cbmV4cG9ydCBjbGFzcyBXaGlsZVRyYW5zZm9ybSB7fVxuZXhwb3J0IGNsYXNzIElmVHJhbnNmb3JtIHt9XG5leHBvcnQgY2xhc3MgRm9yVHJhbnNmb3JtIHt9XG5leHBvcnQgY2xhc3MgU3dpdGNoVHJhbnNmb3JtIHt9XG5leHBvcnQgY2xhc3MgQnJlYWtUcmFuc2Zvcm0ge31cbmV4cG9ydCBjbGFzcyBDb250aW51ZVRyYW5zZm9ybSB7fVxuZXhwb3J0IGNsYXNzIERvVHJhbnNmb3JtIHt9XG5leHBvcnQgY2xhc3MgV2l0aFRyYW5zZm9ybSB7fVxuZXhwb3J0IGNsYXNzIEltcG9ydFRyYW5zZm9ybSB7fVxuZXhwb3J0IGNsYXNzIEV4cG9ydFRyYW5zZm9ybSB7fVxuZXhwb3J0IGNsYXNzIFN1cGVyVHJhbnNmb3JtIHt9XG5leHBvcnQgY2xhc3MgWWllbGRUcmFuc2Zvcm0ge31cbmV4cG9ydCBjbGFzcyBUaGlzVHJhbnNmb3JtIHt9XG5leHBvcnQgY2xhc3MgQ2xhc3NUcmFuc2Zvcm0ge31cbmV4cG9ydCBjbGFzcyBEZWZhdWx0VHJhbnNmb3JtIHt9XG5leHBvcnQgY2xhc3MgRGVidWdnZXJUcmFuc2Zvcm0ge31cbmV4cG9ydCBjbGFzcyBTeW50YXhyZWNEZWNsVHJhbnNmb3JtIHt9XG5leHBvcnQgY2xhc3MgU3ludGF4RGVjbFRyYW5zZm9ybSB7fVxuZXhwb3J0IGNsYXNzIE9wZXJhdG9yRGVjbFRyYW5zZm9ybSB7fVxuZXhwb3J0IGNsYXNzIFJldHVyblN0YXRlbWVudFRyYW5zZm9ybSB7fVxuZXhwb3J0IGNsYXNzIE1vZHVsZU5hbWVzcGFjZVRyYW5zZm9ybSB7XG4gIG5hbWVzcGFjZTogU3ludGF4O1xuICBtb2Q6IFN3ZWV0TW9kdWxlO1xuXG4gIGNvbnN0cnVjdG9yKG5hbWVzcGFjZTogU3ludGF4LCBtb2Q6IFN3ZWV0TW9kdWxlKSB7XG4gICAgdGhpcy5uYW1lc3BhY2UgPSBuYW1lc3BhY2U7XG4gICAgdGhpcy5tb2QgPSBtb2Q7XG4gIH1cbn1cbmV4cG9ydCBjbGFzcyBWYXJCaW5kaW5nVHJhbnNmb3JtIHtcbiAgaWQ6IFN5bnRheDtcblxuICBjb25zdHJ1Y3RvcihpZDogU3ludGF4KSB7XG4gICAgdGhpcy5pZCA9IGlkO1xuICB9XG59XG5leHBvcnQgY2xhc3MgQ29tcGlsZXRpbWVUcmFuc2Zvcm0ge1xuICB2YWx1ZTogYW55O1xuXG4gIGNvbnN0cnVjdG9yKHZhbHVlOiBhbnkpIHtcbiAgICB0aGlzLnZhbHVlID0gdmFsdWU7XG4gIH1cbn1cbiJdfQ==